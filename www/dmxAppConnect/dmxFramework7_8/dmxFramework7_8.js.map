{"version":3,"sources":["../dmxFramework7_6/core/f7.js","../dmxFramework7/core/f7Mappings.js","../dmxFramework7/actions/f7toast.js","../dmxFramework7/actions/f7dialog.js","../dmxFramework7/actions/f7progress.js","../dmxFramework7/actions/f7preloader.js","components/f7App.js","../dmxFramework7/components/f7View.js","../dmxFramework7/components/f7Page.js","../dmxFramework7/components/f7Popup.js","../dmxFramework7/components/f7LoginScreen.js","../dmxFramework7/components/f7ActionSheet.js","../dmxFramework7/components/f7Gauge.js","../dmxFramework7/components/f7Messages.js","../dmxFramework7/components/f7Notification.js","../dmxFramework7/components/f7PhotoBrowser.js","../dmxFramework7/components/f7Progressbar.js","../dmxFramework7/components/f7Toggle.js","../dmxFramework7/components/f7Range.js","../dmxFramework7/components/f7RangeDual.js","../dmxFramework7/components/f7Ptr.js","../dmxFramework7/components/f7SheetModal.js","../dmxFramework7/components/f7Accordion.js","../dmxFramework7/components/f7Autocomplete.js","../dmxFramework7/components/f7Calendar.js","../dmxFramework7/components/f7Picker.js","../dmxFramework7_6/components/f7AreaChart.js","../dmxFramework7_6/components/f7PieChart.js"],"names":["Framework7","alert","dmx","f7","events","Events","init","node","params","app","el","routes","Array","isArray","window","initialized","emit","once","ready","handler","instance","config","mapping","Actions","options","toast","create","destroyOnClose","icon","this","parse","text","position","horizontalPosition","closeButton","closeButtonColor","closeButtonText","closeTimeout","undefined","open","title","Promise","resolve","dialog","confirm","then","_exec","else","defaultValue","prompt","value","login","username","password","color","preloader","close","progressbar","show","set","progress","duration","hide","Component","initialData","name","theme","darkMode","device","online","attributes","type","String","default","enum","Boolean","colorTheme","Object","methods","msg","_component","showPreloader","hidePreloader","showProgress","setProgress","hideProgress","Event","resize","orientationchange","offline","render","props","urlParams","URLSearchParams","document","location","search","has","get","colors","primary","_registerEvents","on","isOnline","isDarkTheme","clone","$parse","performUpdate","updatedProps","setDarkMode","setColorTheme","event","dispatchEvent","animate","navigate","url","router","back","refresh","refreshPage","clearHistory","clearPreviousHistory","view","views","keys","pageData","dmxComponent","route","page","children","push","data","index","findIndex","child","$node","del","splice","destroy","opened","backdrop","closeByBackdropClick","closeOnEscape","swipeToClose","closed","classList","add","popup","loginScreen","closeByOutsideClick","grid","convertToPopover","forceToPopover","action","actions","Number","size","bgColor","borderBgColor","borderColor","borderWidth","valueText","valueTextColor","valueFontSize","valueFontWeight","labelText","labelTextColor","labelFontSize","labelFontWeight","gauge","_getProps","update","newMessagesFirst","messages","showTyping","message","hideTyping","addMessage","method","addMessages","removeMessage","removeMessages","scroll","renderMessages","layout","clear","titleRightText","subtitle","closeOnClick","cssClass","click","notification","activeIndex","exposed","photos","exposition","expositionHideCaptions","popupPush","routableModals","captionsTheme","navbar","toolbar","pageBackLinkText","pageCloseLinkText","navbarShowCount","navbarOfText","iconsColor","expositionToggle","expositionEnable","expositionDisable","tap","doubleTap","doubleClick","slideChange","lazyImageLoad","lazyImageReady","_createComponent","photoBrowser","popupCloseLinkText","hidden","bind","oldColor","remove","checked","ui","template","toggle","change","min","max","step","label","dragableBar","noDraggableBar","vertical","verticalReversed","scale","scaleSteps","scaleSubSteps","setValue","changed","range","draggableBar","extends","start","end","valueStart","valueEnd","setValues","dual","refreshing","done","_ptr","pullstart","pullmove","pullend","bottom","contains","length","insertAdjacentHTML","querySelector","innerHTML","ptr","swipeToStep","stepOpen","stepClose","stepToggle","setSwipeSet","stepProgress","sheet","accordion","addEventListener","extendOf","replaces","priority","limit","preloaderColor","valueProperty","scopeField","textProperty","inputEvents","highlightMatches","typeahead","dropdownPlaceholderText","updateInputValueOnSelect","expandInput","preloaderShow","preloaderHide","autocomplete","openIn","source","_search","inputEl","query","filter","item","DataScope","toLowerCase","includes","locale","firstDay","weekendDays","multiple","rangePicker","rangePickerMinDays","rangePickerMaxDays","direction","validate","minDate","Date","maxDate","touchMove","closeOnSelect","weekHeader","monthSelector","monthPicker","yearSelector","yearPicker","yearPickerMin","yearPickerMax","timePicker","timePickerPlaceholder","sheetPush","scrollToInput","inputReadOnly","toolbarCloseText","header","headerPlaceholder","addValue","nextMonth","prevMonth","nextYear","prevYear","setYearMonth","year","month","dayclick","calendar","map","date","toISOString","_toDate","toString","rotateEffect","momentumRatio","mousewheel","updateValuesOnMomentum","updateValuesOnTouchmove","updateValuesOnMousewheel","freeMode","cols","multiValue","isDynamic","variables","values","objectKey","enclose","dataBindings","sheetSwipeToClose","picker","_getParams","_getCols","col","i","slice","displayProperty","displayValues","console","warn","width","height","datasets","lineChart","axis","axisLabels","tooltip","legend","toggleDatasets","maxAxisLabels","areaChart","_getDatasets","dataset","__WAPPLER__","datasetsValue","datasetsColor","datasetsLabel","pieChart"],"mappings":"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","file":"dmxFramework7_8.js","sourcesContent":["if (!Framework7) {\r\n  alert('Framework7 missing!');\r\n}\r\n\r\ndmx.f7 = {\r\n  events: new Framework7.Events(),\r\n  init: function (node, params) {\r\n    const app = new Framework7({\r\n      ...params,\r\n      el: node,\r\n      routes: Array.isArray(params.routes) ? params.routes : Array.isArray(window.routes) ? window.routes : [],\r\n    });\r\n\r\n    if (app.initialized) {\r\n      dmx.f7.events.emit('ready', app);\r\n    } else {\r\n      app.once('init', () => {\r\n        dmx.f7.events.emit('ready', app);\r\n      });\r\n    }\r\n\r\n    return app;\r\n  },\r\n  ready: function (handler) {\r\n    if (!handler) return;\r\n    if (Framework7.instance && Framework7.instance.initialized) {\r\n      handler(Framework7.instance);\r\n    } else {\r\n      dmx.f7.events.once('ready', handler);\r\n    }\r\n  },\r\n};","dmx.config.mapping['.view'] = 'f7-view';\r\ndmx.config.mapping['.page'] = 'f7-page';\r\ndmx.config.mapping['.popup'] = 'f7-popup';\r\ndmx.config.mapping['.login-screen'] = 'f7-login-screen';\r\ndmx.config.mapping['.actions-modal'] = 'f7-action-sheet';\r\ndmx.config.mapping['.progressbar'] = 'f7-progressbar';\r\ndmx.config.mapping['.toggle:not(.toggle-init)'] = 'f7-toggle';\r\ndmx.config.mapping['.ptr-content'] = 'f7-ptr';\r\ndmx.config.mapping['.accordion-item'] = 'f7-accordion';\r\ndmx.config.mapping['.sheet-modal'] = 'f7-sheet-modal';","dmx.Actions({\r\n  'f7.toast.show' (options) {\r\n    Framework7.instance.toast.create({\r\n      destroyOnClose: true,\r\n      icon: this.parse(options.icon),\r\n      text: this.parse(options.text),\r\n      position: this.parse(options.position) || 'bottom',\r\n      horizontalPosition: this.parse(options.horizontalPosition) || 'left',\r\n      closeButton: !!this.parse(options.closeButton),\r\n      closeButtonColor: this.parse(options.closeButtonColor),\r\n      closeButtonText: this.parse(options.closeButtonText) || 'Ok',\r\n      closeTimeout: this.parse(options.closeTimeout) || undefined\r\n    }).open();\r\n  }\r\n});","dmx.Actions({\r\n  'f7.dialog.alert' (options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.alert(text, title, resolve);\r\n    });\r\n  },\r\n\r\n  'f7.dialog.confirm' (options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.confirm(\r\n        text,\r\n        title,\r\n        () => {\r\n          if (options.then) {\r\n            this._exec(options.then).then(() => resolve(true));\r\n          } else {\r\n            resolve(true);\r\n          }\r\n        },\r\n        () => {\r\n          if (options.else) {\r\n            this._exec(options.else).then(() => resolve(false));\r\n          } else {\r\n            resolve(false);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.prompt' (options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n    const defaultValue = this.parse(options.defaultValue);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.prompt(\r\n        text,\r\n        title,\r\n        (value) => resolve(value),\r\n        () => resolve(null),\r\n        defaultValue\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.login' (options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.login(\r\n        text,\r\n        title,\r\n        (username, password) => resolve({ username, password }),\r\n        () => resolve(null)\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.password' (options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.password(\r\n        text,\r\n        title,\r\n        (password) => resolve(password),\r\n        () => resolve(null)\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.preloader' (options) {\r\n    const title = this.parse(options.title);\r\n    const color = this.parse(options.color);\r\n\r\n    Framework7.instance.dialog.preloader(title, color);\r\n  },\r\n\r\n  'f7.dialog.close' (options) {\r\n    Framework7.instance.dialog.close();\r\n  },\r\n});\r\n","dmx.Actions({\r\n  'f7.progressbar.show' (options) {\r\n    Framework7.instance.progressbar.show(this.parse(options.color));\r\n  },\r\n  \r\n  'f7.progressbar.set' (options) {\r\n    Framework7.instance.progressbar.set(this.parse(options.progress), this.parse(options.duration));\r\n  },\r\n  \r\n  'f7.progressbar.hide' (options) {\r\n    Framework7.instance.progressbar.hide();\r\n  },\r\n});","dmx.Actions({\r\n  'f7.preloader.show' (options) {\r\n    Framework7.instance.preloader.show();\r\n  },\r\n  \r\n  'f7.preloader.hide' (options) {\r\n    Framework7.instance.preloader.hide();\r\n  },\r\n});","dmx.Component('f7-app', {\r\n\r\n  initialData: {\r\n    name: 'Framework7',\r\n    theme: 'auto',\r\n    darkMode: false,\r\n    initialized: false,\r\n    device: null,\r\n    online: false,\r\n  },\r\n\r\n  attributes: {\r\n    name: {\r\n      type: String,\r\n      default: 'Framework7',\r\n    },\r\n\r\n    theme: {\r\n      type: String,\r\n      default: 'auto',\r\n      enum: ['auto', 'ios', 'md'],\r\n    },\r\n\r\n    darkMode: {\r\n      type: [Boolean, String],\r\n      default: 'auto', // auto, true, false\r\n    },\r\n\r\n    colorTheme: {\r\n      type: String,\r\n      default: '#007aff',\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    alert (msg) {\r\n      if (!this._component) return;\r\n      this._component.dialog.alert(msg);\r\n    },\r\n\r\n    showPreloader (color) {\r\n      if (!this._component) return;\r\n      this._component.preloader.show(color);\r\n    },\r\n\r\n    hidePreloader () {\r\n      if (!this._component) return;\r\n      this._component.preloader.hide();\r\n    },\r\n\r\n    showProgress (color) {\r\n      if (!this._component) return;\r\n      this._component.progressbar.show(color);\r\n    },\r\n\r\n    setProgress (progress, duration) {\r\n      if (!this._component) return;\r\n      this._component.progressbar.set(progress, duration);\r\n    },\r\n\r\n    hideProgress (color) {\r\n      if (!this._component) return;\r\n      this._component.progressbar.hide();\r\n    }\r\n  },\r\n\r\n  events: {\r\n    init: Event,\r\n    resize: Event,\r\n    orientationchange: Event,\r\n    online: Event,\r\n    offline: Event,\r\n  },\r\n\r\n  render (node) {\r\n    let theme = this.props.theme;\r\n    let urlParams = new URLSearchParams(document.location.search);\r\n\r\n    if (theme == 'auto' && urlParams.has('theme')) {\r\n      theme = urlParams.get('theme');\r\n    }\r\n\r\n    if (this.props.darkMode != 'auto') {\r\n      this.props.darkMode = this.props.darkMode != 'false';\r\n    }\r\n\r\n    const app = this._component = dmx.f7.init(node, {\r\n      name: this.props.name,\r\n      theme: theme,\r\n      colors: {\r\n        primary: this.props.colorTheme,\r\n      },\r\n      darkMode: this.props.darkMode,\r\n      ...this.props.params,\r\n    });\r\n\r\n    this._registerEvents(['init', 'resize', 'orientationchange', 'online', 'offline']);\r\n\r\n    app.on('connection', (isOnline) => {\r\n      this.set('online', isOnline);\r\n    });\r\n\r\n    app.on('darkThemeChange', (isDarkTheme) => {\r\n      this.set('darkTheme', isDarkTheme);\r\n    });\r\n\r\n    this.set({\r\n      name: app.name,\r\n      theme: app.theme,\r\n      darkMode: app.darkMode,\r\n      initialized: true,\r\n      device: dmx.clone(app.device),\r\n      online: app.online,\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (updatedProps.has('darkMode')) {\r\n      let darkMode = this.props.darkMode;\r\n      if (darkMode != 'auto') {\r\n        darkMode = darkMode != 'false';\r\n      }\r\n      this._component.setDarkMode(darkMode);\r\n    }\r\n\r\n    if (updatedProps.has('colorTheme')) {\r\n      this._component.setColorTheme(this.props.colorTheme);\r\n    }\r\n  },\r\n\r\n  _registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-view', {\r\n\r\n  attributes: {\r\n    animate: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    navigate (url, options) {\r\n      if (!this._component) return;\r\n      this._component.router.navigate(url, options);\r\n    },\r\n\r\n    back (url, options) {\r\n      if (!this._component) return;\r\n      this._component.router.back(url, options);\r\n    },\r\n\r\n    refresh () {\r\n      if (!this._component) return;\r\n      this._component.router.refreshPage();\r\n    },\r\n\r\n    clearHistory () {\r\n      if (!this._component) return;\r\n      this._component.router.clearPreviousHistory();\r\n    }\r\n  },\r\n\r\n  events: {\r\n    init: Event,\r\n    resize: Event,\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      const view = this._component = app.views.create(node, {\r\n        animate: this.props.animate,\r\n        ...this.props.params,\r\n      });\r\n\r\n      this._registerEvents(Object.keys(this.events));\r\n\r\n      view.on('pageInit', pageData => {\r\n        if (!pageData.el.dmxComponent) {\r\n          const Page = dmx.Component('f7-page');\r\n          const page = new Page(pageData.el, this);\r\n          page.set('route', pageData.route);\r\n\r\n          this.children.push(page);\r\n          this.set(page.name, page.data);\r\n\r\n          pageData.dmxComponent = pageData.el.dmxComponent;\r\n        } else {\r\n          pageData.el.dmxComponent.set('route', pageData.route);\r\n          pageData.dmxComponent = pageData.el.dmxComponent;\r\n        }\r\n      });\r\n\r\n      view.on('pageReinit', pageData => {\r\n        if (pageData.dmxComponent) {\r\n          pageData.dmxComponent.set('route', pageData.route);\r\n        }\r\n      });\r\n\r\n      view.on('pageBeforeRemove', pageData => {\r\n        const index = this.children.findIndex(child => child.$node == pageData.el);\r\n\r\n        if (index != -1) {\r\n          this.del(this.children[index].name);\r\n          this.children.splice(index, 1);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-page', {\r\n  \r\n  initialData: {\r\n    route: null,\r\n  },\r\n\r\n});","dmx.Component('f7-popup', {\r\n\r\n  initialData: {\r\n    opened: false\r\n  },\r\n\r\n  attributes: {\r\n    backdrop: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeByBackdropClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeOnEscape: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    animate: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    swipeToClose: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    opened: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open (animate) {\r\n      if (!this._component) return;\r\n      this._component.open(animate);\r\n    },\r\n\r\n    close (animate) {\r\n      if (!this._component) return;\r\n      this._component.close(animate);\r\n    }\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render (node) {\r\n    node.classList.add('popup');\r\n\r\n    dmx.f7.ready(app => {\r\n      const popup = this._component = app.popup.create({\r\n        backdrop: this.props.backdrop,\r\n        closeByBackdropClick: this.props.closeByBackdropClick,\r\n        closeOnEscape: this.props.closeOnEscape,\r\n        animate: this.props.animate,\r\n        swipeToClose: this.props.swipeToClose,\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n\r\n      this._registerEvents(Object.keys(this.events));\r\n\r\n      popup.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      popup.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.props.opened) {\r\n        popup.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('opened')) {\r\n        this._component[this.props.opened ? 'open' : 'close']();\r\n      }\r\n      this.set('opened', this._component.opened);\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _registerEvents (events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-login-screen', {\r\n\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    animate: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    opened: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open (animate) {\r\n      if (!this._component) return;\r\n      this._component.open(animate);\r\n    },\r\n\r\n    close (animate) {\r\n      if (!this._component) return;\r\n      this._component.close(animate);\r\n    },\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render (node) {\r\n    node.classList.add('login-screen');\r\n\r\n    dmx.f7.ready(app => {\r\n      const loginScreen = this._component = app.loginScreen.create({\r\n        animate: this.props.animate,\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n\r\n      this._registerEvents(['open', 'opened', 'close', 'closed']);\r\n\r\n      loginScreen.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      loginScreen.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.props.opened) {\r\n        loginScreen.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('opened')) {\r\n        this._component[this.props.opened ? 'open' : 'close']();\r\n      }\r\n      this.set('opened', this._component.opened);\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _registerEvents (events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-action-sheet', {\r\n\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    backdrop: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeByBackdropClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeByOutsideClick: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    closeOnEscape: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    animate: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    grid: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    convertToPopover: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n\r\n    forceToPopover: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    opened: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open (animate) {\r\n      if (!this._component) return;\r\n      this._component.open(animate);\r\n    },\r\n\r\n    close (animate) {\r\n      if (!this._component) return;\r\n      this._component.close(animate);\r\n    }\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render (node) {\r\n    node.classList.add('actions-modal');\r\n\r\n    dmx.f7.ready(app => {\r\n      const action = this._component = app.actions.create({\r\n        backdrop: this.props.backdrop,\r\n        closeByBackdropClick: this.props.closeByBackdropClick,\r\n        closeByOutsideClick: this.props.closeByOutsideClick,\r\n        closeOnEscape: this.props.closeOnEscape,\r\n        animate: this.props.animate,\r\n        grid: this.props.grid,\r\n        convertToPopover: this.props.convertToPopover,\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n      \r\n      this._registerEvents(['open', 'opened', 'close', 'closed']);\r\n\r\n      action.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      action.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.props.opened) {\r\n        action.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('opened')) {\r\n        this._component[this.props.opened ? 'open' : 'close']();\r\n      }\r\n      this.set('opened', this._component.opened);\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _registerEvents (events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-gauge', {\r\n\r\n  attributes: {\r\n    type: {\r\n      type: String,\r\n      default: 'circle',\r\n      enum: ['circle', 'semicircle'],\r\n    },\r\n\r\n    value: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    size: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n\r\n    bgColor: {\r\n      type: String,\r\n      default: 'transparent',\r\n    },\r\n\r\n    borderBgColor: {\r\n      type: String,\r\n      default: '#eeeeee',\r\n    },\r\n\r\n    borderColor: {\r\n      type: String,\r\n      default: '#000000',\r\n    },\r\n\r\n    borderWidth: {\r\n      type: String,\r\n      default: '10',\r\n    },\r\n\r\n    valueText: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n\r\n    valueTextColor: {\r\n      type: String,\r\n      default: '#000000',\r\n    },\r\n\r\n    valueFontSize: {\r\n      type: String,\r\n      default: '31',\r\n    },\r\n\r\n    valueFontWeight: {\r\n      type: String,\r\n      default: '500',\r\n    },\r\n\r\n    labelText: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n      \r\n    labelTextColor: {\r\n      type: String,\r\n      default: '#888888',\r\n    },\r\n\r\n    labelFontSize: {\r\n      type: String,\r\n      default: '14',\r\n    },\r\n\r\n    labelFontWeight: {\r\n      type: String,\r\n      default: '400',\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  render (node) {\r\n    node.classList.add('gauge');\r\n\r\n    dmx.f7.ready(app => {\r\n      const gauge = this._component = app.gauge.create({\r\n        ...this._getProps(),\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      this._component.update(this._getProps());\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _getProps () {\r\n    return {\r\n      type: this.props.type,\r\n      value: this.props.value,\r\n      size: this.props.size,\r\n      bgColor: this.props.bgColor,\r\n      borderBgColor: this.props.borderBgColor,\r\n      borderColor: this.props.borderColor,\r\n      borderWidth: this.props.borderWidth,\r\n      valueText: this.props.valueText,\r\n      valueTextColor: this.props.valueTextColor,\r\n      valueFontSize: this.props.valueFontSize,\r\n      valueFontWeight: this.props.valueFontWeight,\r\n      labelText: this.props.labelText,\r\n      labelTextColor: this.props.labelTextColor,\r\n      labelFontSize: this.props.labelFontSize,\r\n      labelFontWeight: this.props.labelFontWeight,\r\n    };\r\n  },\r\n\r\n});","dmx.Component('f7-messages', {\r\n\r\n  attributes: {\r\n    newMessagesFirst: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    messages: {\r\n      type: Array,\r\n      default: []\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    showTyping (message) {\r\n      if (!this._component) return;\r\n      this._component.showTyping(message);\r\n    },\r\n\r\n    hideTyping () {\r\n      if (!this._component) return;\r\n      this._component.hideTyping();\r\n    },\r\n\r\n    addMessage (message, method, animate) {\r\n      if (!this._component) return;\r\n      this._component.addMessage(message, method, animate);\r\n    },\r\n\r\n    addMessages (messages, method, animate) {\r\n      if (!this._component) return;\r\n      this._component.addMessages(messages, method, animate);\r\n    },\r\n\r\n    removeMessage (message) {\r\n      if (!this._component) return;\r\n      this._component.removeMessage(message);\r\n    },\r\n\r\n    removeMessages (messages) {\r\n      if (!this._component) return;\r\n      this._component.removeMessages(messages);\r\n    },\r\n\r\n    scroll (duration, position) {\r\n      if (!this._component) return;\r\n      this._component.scroll(duration, position);\r\n    },\r\n\r\n    renderMessages () {\r\n      if (!this._component) return;\r\n      this._component.renderMessages();\r\n    },\r\n\r\n    layout () {\r\n      if (!this._component) return;\r\n      this._component.layout();\r\n    },\r\n\r\n    clear () {\r\n      if (!this._component) return;\r\n      this._component.clear();\r\n    }\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      this._component = Framework7.instance.messages.create({\r\n        ...this.props,\r\n        el: node,\r\n      });\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (props) {\r\n    if (this._component) {\r\n      if (props.has('messages')) {\r\n        this._component.messages = this.props.messages;\r\n      }\r\n      this._component.renderMessages();\r\n    }\r\n  },\r\n\r\n  destroy: function () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      this._component = undefined;\r\n    }\r\n  },\r\n\r\n});","dmx.Component('f7-notification', {\r\n\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    icon: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    title: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    titleRightText: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    subtitle: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    text: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    closeButton: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    closeTimeout: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    closeOnClick: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    swipeToClose: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    cssClass: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    opened: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open () {\r\n      if (!this._component) return;\r\n      this._component.open();\r\n    },\r\n\r\n    close () {\r\n      if (!this._component) return;\r\n      this._component.close();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n    click: Event,\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      const notification = this._component = app.notification.create(this._getProps());\r\n\r\n      this._registerEvents(['open', 'opened', 'close', 'closed', 'click']);\r\n\r\n      notification.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      notification.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.props.opened) {\r\n        notification.open();\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('opened')) {\r\n        this._component[this.props.opened ? 'open' : 'close']();\r\n      }\r\n      this.set('opened', this._component.opened);\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      Framework7.instance.notification.destroy(this._component.el);\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _getProps () {\r\n    return {\r\n      icon: this.props.icon,\r\n      title: this.props.title,\r\n      titleRightText: this.props.titleRightText,\r\n      subtitle: this.props.subtitle,\r\n      text: this.props.text,\r\n      closeButton: this.props.closeButton,\r\n      closeTimeout: this.props.closeTimeout,\r\n      closeOnClick: this.props.closeOnClick,\r\n      swipeToClose: this.props.swipeToClose,\r\n      cssClass: this.props.cssClass,\r\n      ...this.props.params,\r\n    };\r\n  },\r\n\r\n  _registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-photo-browser', {\r\n\r\n  initialData: {\r\n    activeIndex: 0,\r\n    exposed: false,\r\n    opened: false\r\n  },\r\n\r\n  attributes: {\r\n    photos: {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n\r\n    exposition: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    expositionHideCaptions: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    swipeToClose: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    popupPush: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    routableModals: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    url: {\r\n      type: String,\r\n      default: 'photos/',\r\n    },\r\n\r\n    type: {\r\n      type: String,\r\n      default: 'standalone',\r\n      enum: ['standalone', 'popup', 'page'],\r\n    },\r\n\r\n    theme: {\r\n      type: String,\r\n      default: 'light',\r\n      enum: ['light', 'dark'],\r\n    },\r\n\r\n    captionsTheme: {\r\n      type: String,\r\n      default: undefined, // undefined will use the same as theme\r\n      enum: [undefined, 'light', 'dark'],\r\n    },\r\n\r\n    navbar: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    toolbar: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    pageBackLinkText: {\r\n      type: String,\r\n      default: 'Back',\r\n    },\r\n\r\n    pageCloseLinkText: {\r\n      type: String,\r\n      default: 'Close',\r\n    },\r\n\r\n    navbarShowCount: {\r\n      type: Boolean,\r\n      default: undefined,\r\n    },\r\n\r\n    navbarOfText: {\r\n      type: String,\r\n      default: 'of',\r\n    },\r\n\r\n    iconsColor: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open (index) {\r\n      if (!this._component) return;\r\n      this._component.open(index);\r\n    },\r\n\r\n    close () {\r\n      if (!this._component) return;\r\n      this._component.close();\r\n    },\r\n\r\n    expositionToggle () {\r\n      if (!this._component) return;\r\n      this._component.expositionToggle();\r\n      this.set('exposed', this._component.exposed);\r\n    },\r\n\r\n    expositionEnable () {\r\n      if (!this._component) return;\r\n      this._component.expositionEnable();\r\n      this.set('exposed', this._component.exposed);\r\n    },\r\n\r\n    expositionDisable () {\r\n      if (!this._component) return;\r\n      this._component.expositionDisable();\r\n      this.set('exposed', this._component.exposed);\r\n    }\r\n  },\r\n\r\n  events: {\r\n    tap: Event,\r\n    click: Event,\r\n    doubleTap: Event,\r\n    doubleClick: Event,\r\n    slideChange: Event,\r\n    lazyImageLoad: Event,\r\n    lazyImageReady: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      this._createComponent();\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      this._createComponent();\r\n      this.set('activeIndex', this._component.activeIndex);\r\n      this.set('exposed', this._component.exposed);\r\n      this.set('opened', this._component.opened);\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _createComponent () {\r\n    const photoBrowser = this._component = Framework7.instance.photoBrowser.create({\r\n      ...this._getProps(),\r\n      ...this.props.params,\r\n    });\r\n\r\n    this._registerEvents(Object.keys(this.events));\r\n\r\n    photoBrowser.on('opened', () => {\r\n      this.set('opened', true);\r\n    });\r\n\r\n    photoBrowser.on('closed', () => {\r\n      this.set('opened', false);\r\n    });\r\n\r\n    photoBrowser.on('slideChange', () => {\r\n      this.set('activeIndex', photoBrowser.activeIndex);\r\n    })\r\n  },\r\n\r\n  _getProps () {\r\n    return {\r\n      photos: this.props.photos,\r\n      exposition: this.props.exposition,\r\n      expositionHideCaptions: this.props.expositionHideCaptions,\r\n      swipeToClose: this.props.swipeToClose,\r\n      popupPush: this.props.popupPush,\r\n      routableModals: this.props.routableModals,\r\n      url: this.props.url,\r\n      type: this.props.type,\r\n      theme: this.props.theme,\r\n      captionsTheme: this.props.captionsTheme,\r\n      navbar: this.props.navbar,\r\n      toolbar: this.props.toolbar,\r\n      pageBackLinkText: this.props.pageBackLinkText,\r\n      popupCloseLinkText: this.props.pageCloseLinkText,\r\n      navbarShowCount: this.props.navbarShowCount,\r\n      navbarOfText: this.props.navbarOfText,\r\n      iconsColor: this.props.iconsColor,\r\n    };\r\n  },\r\n  \r\n  _registerEvents (events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n});","dmx.Component('f7-progressbar', {\r\n\r\n  initialData: {\r\n    progress: 0\r\n  },\r\n\r\n  attributes: {\r\n    progress: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    color: {\r\n      type: String,\r\n      default: 'default',\r\n      enum: ['default', 'red', 'green', 'blue', 'pink', 'yellow', 'orange', 'purple', 'deeppurple', 'lightblue', 'teal', 'lime', 'deeporange', 'gray', 'white', 'black', 'multi'],\r\n    },\r\n\r\n    hidden: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    set (progress, duration) {\r\n      if (!this._component) return;\r\n      this._component.set(progress, duration);\r\n    },\r\n\r\n    show () {\r\n      if (!this._component) return;\r\n      this._component.show();\r\n    },\r\n\r\n    hide () {\r\n      if (!this._component) return;\r\n      this._component.hide();\r\n    },\r\n  },\r\n\r\n  render  (node) {\r\n    node.classList.add('progressbar');\r\n\r\n    dmx.f7.ready(app => {\r\n      this._component = {\r\n        set: app.progressbar.set.bind(app.progressbar, node),\r\n        show: app.progressbar.show.bind(app.progressbar, node),\r\n        hide: app.progressbar.hide.bind(app.progressbar, node),\r\n      };\r\n\r\n      if (this.props.hidden) {\r\n        this._component.hide();\r\n      } else {\r\n        this._component.show(this.props.progress, this.props.color);\r\n      }\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('hidden')) {\r\n        if (this.props.hidden) {\r\n          this._component.hide();\r\n        } else {\r\n          this._component.show(this.props.progress, this.props.color);\r\n        }\r\n      }\r\n\r\n      if (updatedProps.has('color')) {\r\n        const oldColor = updatedProps.get('color');\r\n\r\n        if (oldColor) {\r\n          this.$node.classList.remove('color-' + oldColor);\r\n        }\r\n\r\n        if (this.props.color != 'default') {\r\n          this.$node.classList.add('color-' + this.props.color);\r\n        }\r\n      }\r\n\r\n      if (updatedProps.has('progress')) {\r\n        this._component.set(this.props.progress);\r\n      }\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-toggle', {\r\n\r\n  initialData: {\r\n    checked: false,\r\n  },\r\n\r\n  ui: {\r\n    template: `<label id=\"@@id@@\" is=\"dmx-f7-toggle\" class=\"toggle\">\r\n  <input name=\"@@id@@\" type=\"checkbox\">\r\n  <span class=\"toggle-icon\"></span>\r\n</label>`,\r\n  },\r\n\r\n  attributes: {\r\n    checked: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    toggle () {\r\n      if (!this._component) return;\r\n      this._component.toggle();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      const toggle = this._component = app.toggle.create({\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n\r\n      toggle.on('change', () => {\r\n        this.set('checked', toggle.checked);\r\n      });\r\n\r\n      if (toggle.checked != this.props.checked) {\r\n        toggle.toggle();\r\n      }\r\n\r\n      this.set('checked', toggle.checked);\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('checked')) {\r\n        if(this._component.checked != this.props.checked) {\r\n          this._component.toggle();\r\n        }\r\n      }\r\n      this.set('checked', this._component.checked);\r\n    }\r\n  },\r\n\r\n  destroy (props) {\r\n    if (this._component) {\r\n      Framework7.instance.toggle.destroy(this._component.el);\r\n      delete this._component;\r\n    }\r\n  },\r\n});","dmx.Component('f7-range', {\r\n\r\n  initialData: {\r\n    value: null\r\n  },\r\n\r\n  attributes: {\r\n    value: {\r\n      type: Number,\r\n      default: null, // defaults to center\r\n    },\r\n\r\n    min: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    max: {\r\n      type: Number,\r\n      default: 100,\r\n    },\r\n\r\n    step: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    label: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    dragableBar: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    noDraggableBar: { // for backwards compatibility\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    vertical: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    verticalReversed: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    scale: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    scaleSteps: {\r\n      type: Number,\r\n      default: 5,\r\n    },\r\n\r\n    scaleSubSteps: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setValue (value) {\r\n      if (!this._component) return;\r\n      this._component.setValue(value);\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n    changed: Event,\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      const range = this._component = app.range.create({\r\n        value: this.props.value,\r\n        min: this.props.min,\r\n        max: this.props.max,\r\n        step: this.props.step,\r\n        label: this.props.label,\r\n        draggableBar: this.props.noDraggableBar ? false : this.props.draggableBar,\r\n        vertical: this.props.vertical,\r\n        verticalReversed: this.props.verticalReversed,\r\n        scale: this.props.scale,\r\n        scaleSteps: this.props.scaleSteps,\r\n        scaleSubSteps: this.props.scaleSubSteps,\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n\r\n      range.on('change', (range, value) => {\r\n        this.set('value', value);\r\n        this.dispatchEvent('change');\r\n      });\r\n\r\n      range.on('changed', () => this.dispatchEvent('changed'));\r\n\r\n      this.set('value', range.value);\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('value')) {\r\n        this._component.setValue(this.props.value);\r\n      }\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-range-dual', {\r\n\r\n  extends: 'f7-range',\r\n\r\n  initialData: {\r\n    start: null,\r\n    end: null\r\n  },\r\n\r\n  attributes: {\r\n    valueStart: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    valueEnd: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setValues (start, end) {\r\n      if (!this._component) return;\r\n      this._component.setValue([start, end]);\r\n    },\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      const range = this._component = app.range.create({\r\n        dual: true,\r\n        value: [this.props.valueStart, this.props.valueEnd],\r\n        min: this.props.min,\r\n        max: this.props.max,\r\n        step: this.props.step,\r\n        label: this.props.label,\r\n        draggableBar: this.props.noDraggableBar ? false : this.props.draggableBar,\r\n        vertical: this.props.vertical,\r\n        verticalReversed: this.props.verticalReversed,\r\n        scale: this.props.scale,\r\n        scaleSteps: this.props.scaleSteps,\r\n        scaleSubSteps: this.props.scaleSubSteps,\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n\r\n      range.on('change', (range, value) => {\r\n        this.set('start', range.value[0]);\r\n        this.set('end', range.value[1]);\r\n        this.dispatchEvent('change');\r\n      });\r\n\r\n      range.on('changed', () => this.dispatchEvent('changed'));\r\n\r\n      this.set('start', range.value[0]);\r\n      this.set('end', range.value[1]);\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('valueStart') || updatedProps.has('valueEnd')) {\r\n        this._component.setValue([this.props.valueStart, this.props.valueEnd]);\r\n      }\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-ptr', {\r\n\r\n  initialData: {\r\n    refreshing: false\r\n  },\r\n\r\n  methods: {\r\n    done () {\r\n      if (!this._ptr) return;\r\n      this._ptr.done();\r\n    },\r\n\r\n    refresh () {\r\n      if (!this._ptr) return;\r\n      this._ptr.refresh();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    pullstart: Event,\r\n    pullmove: Event,\r\n    pullend: Event,\r\n    refresh: Event,\r\n    done: Event,\r\n  },\r\n\r\n  render (node) {\r\n    const bottom = node.classList.contains('ptr-bottom');\r\n\r\n    // add class if needed\r\n    node.classList.add('ptr-content');\r\n\r\n    if (node.children.length) {\r\n      if (!node[(bottom ? 'last' : 'first') + 'ElementChild'].classList.contains('ptr-preloader')) {\r\n        // add preloader html if not in dom\r\n        node.insertAdjacentHTML(bottom ? 'beforeend' : 'afterbegin', '<div class=\"ptr-preloader\"><div class=\"preloader\"></div><div class=\"ptr-arrow\"></div></div>');\r\n        dmx.f7.ready(app => app.preloader.init(node.querySelector('.preloader')));\r\n      }\r\n    } else {\r\n      node.innerHTML = '<div class=\"ptr-preloader\"><div class=\"preloader\"></div><div class=\"ptr-arrow\"></div></div>';\r\n    }\r\n\r\n    dmx.f7.ready(app => {\r\n      // get/create ptr instance\r\n      this._ptr = app.ptr.get(node) || app.ptr.create(node);\r\n      // delegate events\r\n      this._ptr.on('pullStart', this.dispatchEvent.bind(this, 'pullstart'));\r\n      this._ptr.on('pullMove', this.dispatchEvent.bind(this, 'pullmove'));\r\n      this._ptr.on('pullEnd', this.dispatchEvent.bind(this, 'pullend'));\r\n      this._ptr.on('refresh', this.dispatchEvent.bind(this, 'refresh'));\r\n      this._ptr.on('done', this.dispatchEvent.bind(this, 'done'));\r\n      // update data\r\n      this._ptr.on('refresh', () => this.set('refreshing', true));\r\n      this._ptr.on('done', () => this.set('refershing', false));\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n});","dmx.Component('f7-sheet-modal', {\r\n\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    backdrop: {\r\n      type: Boolean,\r\n      default: undefined, // true for MD and Aurora, false for iOS\r\n    },\r\n\r\n    closeByBackdropClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeByOutsideClick: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    closeOnEscape: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    animate: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    swipeToClose: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    swipeToStep: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    push: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    opened: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open (animate) {\r\n      if (!this._component) return;\r\n      this._component.open(animate);\r\n    },\r\n\r\n    close (animate) {\r\n      if (!this._component) return;\r\n      this._component.close(animate);\r\n    },\r\n\r\n    stepOpen () {\r\n      if (!this._component) return;\r\n      this._component.stepOpen();\r\n    },\r\n\r\n    stepClose () {\r\n      if (!this._component) return;\r\n      this._component.stepClose();\r\n    },\r\n\r\n    stepToggle () {\r\n      if (!this._component) return;\r\n      this._component.stepToggle();\r\n    },\r\n\r\n    setSwipeSet () {\r\n      if (!this._component) return;\r\n      this._component.setSwipeSet();\r\n    }\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n    stepOpen: Event,\r\n    stepClose: Event,\r\n    stepProgress: Event,\r\n  },\r\n\r\n  render (node) {\r\n    node.classList.add('sheet-modal');\r\n\r\n    dmx.f7.ready(app => {\r\n      const sheet = this._component = app.sheet.create({\r\n        backdrop: this.props.backdrop,\r\n        closeByOutsideClick: this.props.closeByOutsideClick,\r\n        closeOnEscape: this.props.closeOnEscape,\r\n        animate: this.props.animate,\r\n        swipeToClose: this.props.swipeToClose,\r\n        swipeToStep: this.props.swipeToStep,\r\n        push: this.props.push,\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n\r\n      this._registerEvents(['open', 'opened', 'close', 'closed', 'stepOpen', 'stepClose', 'stepProgress']);\r\n\r\n      sheet.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      sheet.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.props.opened) {\r\n        sheet.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('opened')) {\r\n        this._component[this.props.opened ? 'open' : 'close']();\r\n      }\r\n      this.set(\"opened\", this._component.opened);\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _registerEvents (events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});\r\n","dmx.Component('f7-accordion', {\r\n\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    opened: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open () {\r\n      Framework7.instance.accordion.open(this.$node);\r\n    },\r\n\r\n    close () {\r\n      Framework7.instance.accordion.close(this.$node);\r\n    },\r\n\r\n    toggle () {\r\n      Framework7.instance.accordion.toggle(this.$node);\r\n    },\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render (node) {\r\n    for (const event of Object.keys(this.events)) {\r\n      node.addEventListener(`accordion:${event}`, () => {\r\n        this.dispatchEvent(event);\r\n      });\r\n    }\r\n\r\n    node.addEventListener('accordion:opened', () => {\r\n      this.set('opened', true);\r\n    });\r\n\r\n    node.addEventListener('accordion:closed', () => {\r\n      this.set('opened', false);\r\n    });\r\n\r\n    if (this.props.opened) {\r\n      Framework7.instance.accordion.open(node);\r\n    }\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (updatedProps.has('opened')) {\r\n      Framework7.instance.accordion[this.props.opened ? 'open' : 'close'](this.$node)\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-autocomplete', {\r\n\r\n  initialData: {\r\n    value: null,\r\n    opened: false,\r\n  },\r\n\r\n  ui: {\r\n    template: '<input id=\"@@id@@\" name=\"@@id@@\" type=\"text\" is=\"dmx-f7-autocomplete\">',\r\n    extendOf: ['dmx-input', 'f7-5-input'],\r\n    replaces: 'f7-5-input',\r\n    priority: 100\r\n  },\r\n\r\n  attributes: {\r\n    limit: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    preloader: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    preloaderColor: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    value: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    valueProperty: {\r\n      ui: {\r\n        scopeField: 'data'\r\n      },\r\n      type: String,\r\n      default: 'id',\r\n    },\r\n\r\n    textProperty: {\r\n      ui: {\r\n        scopeField: 'data'\r\n      },\r\n      type: String,\r\n      default: 'text',\r\n    },\r\n\r\n    inputEvents: {\r\n      type: String,\r\n      default: 'input',\r\n    },\r\n\r\n    highlightMatches: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    typeahead: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    dropdownPlaceholderText: {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    updateInputValueOnSelect: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    expandInput: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    data: {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open () {\r\n      if (!this._component) return;\r\n      this._component.open();\r\n    },\r\n\r\n    close: function() {\r\n      if (!this._component) return;\r\n      this._component.close();\r\n    },\r\n\r\n    preloaderShow: function() {\r\n      if (!this._component) return;\r\n      this._component.preloaderShow();\r\n    },\r\n\r\n    preloaderHide: function() {\r\n      if (!this._component) return;\r\n      this._component.preloaderHide();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      const autocomplete = this._component = app.autocomplete.create({\r\n        openIn: 'dropdown',\r\n        limit: this.props.limit,\r\n        preloader: this.props.preloader,\r\n        preloaderColor: this.props.preloaderColor,\r\n        value: Array.isArray(this.props.value) ? this.props.value : [this.props.value],\r\n        valueProperty: this.props.valueProperty,\r\n        textProperty: this.props.textProperty,\r\n        inputEvents: this.props.inputEvents,\r\n        highlightMatches: this.props.highlightMatches,\r\n        typeahead: this.props.typeahead,\r\n        dropdownPlaceholderText: this.props.dropdownPlaceholderText,\r\n        updateInputValueOnSelect: this.props.updateInputValueOnSelect,\r\n        expandInput: this.props.expandInput,\r\n        source: this._search.bind(this),\r\n        ...this.props.params,\r\n        inputEl: node,\r\n      });\r\n\r\n      this._registerEvents(['change', 'open', 'opened', 'close', 'closed']);\r\n\r\n      autocomplete.on('change', () => {\r\n        this.set('value', autocomplete.value[0]);\r\n      });\r\n\r\n      autocomplete.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      autocomplete.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n    });\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _search (query, render) {\r\n    render(query.length ? this.props.data.filter(item => {\r\n      if (typeof item == 'object') {\r\n        item = dmx.parse(this.props.textProperty, dmx.DataScope(item));\r\n      }\r\n\r\n      if (typeof item != 'string') return false;\r\n      return item.toLowerCase().includes(query.toLowerCase());\r\n    }) : []);\r\n  },\r\n\r\n  _registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-calendar', {\r\n\r\n  initialData: {\r\n    value: [],\r\n    opened: false,\r\n  },\r\n\r\n  ui: {\r\n    template: '<input id=\"@@id@@\" name=\"@@id@@\" type=\"text\" is=\"dmx-f7-calendar\">',\r\n    extendOf: ['dmx-input', 'f7-5-input'],\r\n    replaces: 'f7-5-input',\r\n    priority: 100\r\n  },\r\n\r\n  attributes: {\r\n    locale: {\r\n      type: String,\r\n      default: undefined, // will use browser locale\r\n    },\r\n\r\n    value: {\r\n      type: Array,\r\n      default: undefined,\r\n    },\r\n\r\n    firstDay: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    weekendDays: {\r\n      type: Array,\r\n      default: [0, 6],\r\n    },\r\n\r\n    // dateFormat?\r\n\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    rangePicker: { // not compatible with multiple\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    rangePickerMinDays: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    rangePickerMaxDays: {\r\n      type: Number,\r\n      default: 0, // 0 means no maximum\r\n    },\r\n\r\n    direction: {\r\n      type: String,\r\n      default: 'horizontal',\r\n      enum: ['horizontal', 'vertical'],\r\n      validate: value => ['horizontal', 'vertical'].includes(value),\r\n    },\r\n\r\n    minDate: {\r\n      type: Date,\r\n      default: null,\r\n    },\r\n\r\n    maxDate: {\r\n      type: Date,\r\n      default: null,\r\n    },\r\n\r\n    touchMove: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    animate: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeOnSelect: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    weekHeader: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    monthSelector: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    monthPicker: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    yearSelector: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    yearPicker: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    yearPickerMin: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    yearPickerMax: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    timePicker: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    // timePickerFormat?\r\n\r\n    timePickerPlaceholder: {\r\n      type: String,\r\n      default: 'Select time',\r\n    },\r\n\r\n    // Container/opener-specific parameters\r\n\r\n    openIn: {\r\n      type: String,\r\n      default: 'auto',\r\n      enum: ['auto', 'popover', 'sheet', 'customModal'],\r\n      validate: value => ['auto', 'popover', 'sheet', 'customModal'].includes(value),\r\n    },\r\n\r\n    sheetPush: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    // sheetSwipeToClose?\r\n\r\n    scrollToInput: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    inputReadOnly: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeByOutsideClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    toolbar: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    toolbarCloseText: {\r\n      type: String,\r\n      default: 'Done',\r\n    },\r\n\r\n    header: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    headerPlaceholder: {\r\n      type: String,\r\n      default: 'Select date',\r\n    },\r\n\r\n    // backdrop?\r\n\r\n    closeByBackdropClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setValue (value) {\r\n      this._component.setValue(value);\r\n    },\r\n    addValue (value) {\r\n      this._component.addValue(value);\r\n    },\r\n    nextMonth (duration) {\r\n      this._component.nextMonth(duration);\r\n    },\r\n    prevMonth (duration) {\r\n      this._component.prevMonth(duration);\r\n    },\r\n    nextYear () {\r\n      this._component.nextYear();\r\n    },\r\n    prevYear () {\r\n      this._component.prevYear();\r\n    },\r\n    setYearMonth (year, month, duration) {\r\n      this._component.setYearMonth(year, month, duration);\r\n    },\r\n    open () {\r\n      this._component.open();\r\n    },\r\n    close () {\r\n      this._component.close();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    dayclick: Event,\r\n    change: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      const calendar = this._component = app.calendar.create({\r\n        ...this._getProps(),\r\n        ...this.props.params,\r\n        inputEl: node,\r\n      });\r\n\r\n      this._registerEvents(['change', 'open', 'opened', 'close', 'closed']);\r\n\r\n      calendar.on('change', () => {\r\n        this.set('value', calendar.value.map(date => date.toISOString()));\r\n      });\r\n\r\n      calendar.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      calendar.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n    });\r\n  },\r\n\r\n  performUpdate: function(updatedProps) {\r\n    if (this._component) {\r\n      this._component.update(this._getProps());\r\n    }\r\n  },\r\n\r\n  destroy: function() {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _getProps: function() {\r\n    return {\r\n      locale: this.props.locale,\r\n      value: this.props.value,\r\n      firstDay: this.props.firstDay,\r\n      weekendDays: this.props.weekendDays,\r\n      multiple: this.props.multiple,\r\n      rangePicker: this.props.rangePicker,\r\n      rangePickerMinDays: this.props.rangePickerMinDays,\r\n      rangePickerMaxDays: this.props.rangePickerMaxDays,\r\n      direction: this.props.direction,\r\n      minDate: this._toDate('minDate'),\r\n      maxDate: this._toDate('maxDate'),\r\n      touchMove: this.props.touchMove,\r\n      animate: this.props.animate,\r\n      closeOnSelect: this.props.closeOnSelect,\r\n      weekHeader: this.props.weekHeader,\r\n      monthSelector: this.props.monthSelector,\r\n      monthPicker: this.props.monthPicker,\r\n      yearSelector: this.props.yearSelector,\r\n      yearPicker: this.props.yearPicker,\r\n      yearPickerMin: this.props.yearPickerMin,\r\n      yearPickerMax: this.props.yearPickerMax,\r\n      timePicker: this.props.timePicker,\r\n      timePickerPlaceholder: this.props.timePickerPlaceholder,\r\n      openIn: this.props.openIn,\r\n      sheetPush: this.props.sheetPush,\r\n      scrollToInput: this.props.scrollToInput,\r\n      inputReadOnly: this.props.inputReadOnly,\r\n      closeByOutsideClick: this.props.closeByOutsideClick,\r\n      toolbar: this.props.toolbar,\r\n      toolbarCloseText: this.props.toolbarCloseText,\r\n      header: this.props.header,\r\n      headerPlaceholder: this.props.headerPlaceholder,\r\n      closeByBackdropClick: this.props.closeByBackdropClick,\r\n    };\r\n  },\r\n\r\n  _registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  _toDate: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    let date = null;\r\n    if (value) {\r\n      date = new Date(value);\r\n      if (date.toString() == 'Invalid Date') {\r\n        date = null;\r\n      }\r\n    }\r\n\r\n    return date;\r\n  },\r\n\r\n});","dmx.Component('f7-picker', {\r\n\r\n  initialData: {\r\n    value: [],\r\n    opened: false,\r\n  },\r\n\r\n  ui: {\r\n    template: '<input id=\"@@id@@\" name=\"@@id@@\" type=\"text\" is=\"dmx-f7-picker\">',\r\n    extendOf: ['dmx-input', 'f7-5-input'],\r\n    replaces: 'f7-5-input',\r\n    priority: 100\r\n  },\r\n\r\n  attributes: {\r\n    rotateEffect: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    momentumRatio: {\r\n      type: Number,\r\n      default: 7,\r\n    },\r\n\r\n    mousewheel: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    updateValuesOnMomentum: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    updateValuesOnTouchmove: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    updateValuesOnMousewheel: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    freeMode: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    value: {\r\n      type: Array,\r\n      default: undefined,\r\n    },\r\n    \r\n    cols: {\r\n      ui: {\r\n        multiValue: true,\r\n        isDynamic: true,\r\n        variables: [\r\n          {name: 'textAlign', type: 'droplist', title: 'Text Align', values: [{value:'left',title:'Left'},{value:'center',title:'Center'},{value:'right',title:'Right'}], objectKey: 'textAlign', enclose: 'single'},\r\n          {name: 'dataSource', type: 'text', title: 'Data Source', dataBindings: true, objectKey: 'source'},\r\n          {name: 'valueProperty', type: 'text', title: 'Value Property', dataBindings: true, scopeField: 'dataSource', objectKey: 'valueProperty', enclose: 'single'},\r\n          {name: 'displayProperty', type: 'text', title: 'Display Property', dataBindings: true, scopeField: 'dataSource', objectKey: 'displayProperty', enclose: 'single'},\r\n        ]\r\n      },\r\n      type: Array,\r\n      default: [],\r\n    },\r\n\r\n    // Container/opener-specific parameters\r\n\r\n    openIn: {\r\n      type: String,\r\n      default: 'auto',\r\n      enum: ['auto', 'popover', 'sheet'],\r\n      validate: value => ['auto', 'popover', 'sheet'].includes(value),\r\n    },\r\n\r\n    backdrop: {\r\n      type: Boolean,\r\n      default: undefined,\r\n    },\r\n\r\n    sheetPush: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    sheetSwipeToClose: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    scrollToInput: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    inputReadOnly: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    closeByOutsideClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    toolbar: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    toolbarCloseText: {\r\n      type: String,\r\n      default: 'Done',\r\n    },\r\n\r\n    routableModals: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    url: {\r\n      type: String,\r\n      default: 'select/',\r\n    },\r\n\r\n    opened: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    \r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open () {\r\n      if (!this._component) return;\r\n      this._component.open();\r\n    },\r\n\r\n    close () {\r\n      if (!this._component) return;\r\n      this._component.close();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n    init: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render (node) {\r\n    dmx.f7.ready(app => {\r\n      this._createComponent();\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      if (updatedProps.has('opened')) {\r\n        this._component[this.props.opened ? 'open' : 'close']();\r\n      }\r\n\r\n      if (updatedProps.has('cols')) {\r\n        this._component.destroy();\r\n        this._createComponent();\r\n      }\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _createComponent () {\r\n    const picker = this._component = Framework7.instance.picker.create(this._getParams());\r\n\r\n    this._registerEvents(Object.keys(this.events));\r\n\r\n    picker.on('init', () => {\r\n      this.set('value', picker.value);\r\n    });\r\n\r\n    picker.on('change', () => {\r\n      this.set('value', picker.value);\r\n    });\r\n\r\n    picker.on('opened', () => {\r\n      this.set('opened', true);\r\n    });\r\n\r\n    picker.on('closed', () => {\r\n      this.set('closed', false);\r\n    });\r\n\r\n    if (this.props.opened) {\r\n      picker.open();\r\n    }\r\n  },\r\n\r\n  _getParams () {\r\n    return {\r\n      rotateEffect: this.props.rotateEffect,\r\n      momentumRatio: this.props.momentumRatio,\r\n      mousewheel: this.props.mousewheel,\r\n      updateValuesOnMomentum: this.props.updateValuesOnMomentum,\r\n      updateValuesOnTouchmove: this.props.updateValuesOnTouchmove,\r\n      updateValuesOnMousewheel: this.props.updateValuesOnMousewheel,\r\n      freeMode: this.props.freeMode,\r\n      value: this.props.value,\r\n      cols: this._getCols(),\r\n      openIn: this.props.openIn,\r\n      backdrop: this.props.backdrop ? this.props.backdrop : undefined,\r\n      sheetPush: this.props.sheetPush,\r\n      sheetSwipeToClose: this.props.sheetSwipeToClose,\r\n      scrollToInput: this.props.scrollToInput,\r\n      inputReadOnly\t: this.props.inputReadOnly,\r\n      closeByOutsideClick: this.props.closeByOutsideClick,\r\n      toolbar: this.props.toolbar,\r\n      toolbarCloseText: this.props.toolbarCloseText,\r\n      routableModals: this.props.routableModals,\r\n      url: this.props.url,\r\n      ...this.props.params,\r\n      inputEl: this.$node,\r\n    };\r\n  },\r\n\r\n  _getCols () {\r\n    return Array.isArray(this.props.cols) ? this.props.cols.map((col, i) => {\r\n      if (Array.isArray(col.source)) {\r\n        col.values = col.source.slice(0);\r\n        \r\n        if (col.valueProperty) {\r\n          col.values = col.source.map(item => item[col.valueProperty]);\r\n        }\r\n\r\n        if (col.displayProperty) {\r\n          col.displayValues = col.source.map(item => item[col.displayProperty]);\r\n        }\r\n      }\r\n      \r\n      if (!Array.isArray(col.values)) {\r\n        col.values = [];\r\n        console.warn(`Picker ${this.name}: Column ${i+1} has no values`);\r\n      }\r\n\r\n      return dmx.clone(col);\r\n    }) : [];\r\n  },\r\n\r\n  _registerEvents (events) {\r\n    for (const event of events) {\r\n      this._component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n  \r\n});","dmx.Component('f7-area-chart', {\r\n\r\n  attributes: {\r\n    width: {\r\n      type: Number,\r\n      default: 640,\r\n    },\r\n\r\n    height: {\r\n      type: Number,\r\n      default: 320,\r\n    },\r\n    \r\n    datasets: {\r\n      ui: {\r\n        multiValue: true,\r\n        isDynamic: true,\r\n        variables: [\r\n          {name: 'dataSource', type: 'text', title: 'Data Source', dataBindings: true, objectKey: 'values'},\r\n          {name: 'valueProperty', type: 'text', title: 'Value Property', dataBindings: true, scopeField: 'dataSource', objectKey: 'valueProperty', enclose: 'single'},\r\n          {name: 'dataSetColor', type: 'css_color', title: 'Color', objectKey: 'color', enclose: 'single'},\r\n          {name: 'dataSetLabel', type: 'text', title: 'Label', objectKey: 'label', enclose: 'single'},\r\n        ]\r\n      },\r\n      type: Array,\r\n      default: undefined,\r\n    },\r\n\r\n    lineChart: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    axis: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    axisLabels: {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n\r\n    tooltip: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    legend: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    toggleDatasets: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    maxAxisLabels: {\r\n      type: Number,\r\n      default: 8,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  render (node) {\r\n    node.classList.add('area-chart');\r\n\r\n    dmx.f7.ready(app => {\r\n      this._component = app.areaChart.create(this._getProps());\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      this._component.update(this._getProps());\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _getProps () {\r\n    return {\r\n      width: this.props.width,\r\n      height: this.props.height,\r\n      datasets: this._getDatasets(),\r\n      lineChart: this.props.lineChart,\r\n      axis: this.props.axis,\r\n      axisLabels: this.props.axisLabels,\r\n      tooltip: this.props.tooltip,\r\n      legend: this.props.legend,\r\n      toggleDatasets: this.props.toggleDatasets,\r\n      maxAxisLabels: this.props.maxAxisLabels,\r\n      ...this.props.params,\r\n      el: this.$node,\r\n    };\r\n  },\r\n\r\n  _getDatasets () {\r\n    return Array.isArray(this.props.datasets) ? this.props.datasets.map(dataset => {\r\n      if (Array.isArray(dataset.values)) {\r\n        if (dataset.valueProperty) {\r\n          dataset.values = dataset.values.map(value => value[dataset.valueProperty]);\r\n        }\r\n        // Make sure values are numbers\r\n        dataset.values = dataset.values.map(Number);\r\n      } else {\r\n        console.warn(`Dataset ${this.name}: values is not an array`);\r\n        dataset.values = [];\r\n      }\r\n\r\n      return dataset;\r\n    }) : window.__WAPPLER__ ? [ // dummy data for designview\r\n      { label: 'Dataset 1', color: '#4dc9f6', values: [0, 100, 250, 300, 175, 400] },\r\n      { label: 'Dataset 2', color: '#f67019', values: [100, 75, 133, 237, 40, 200] },\r\n      { label: 'Dataset 3', color: '#f53794', values: [100, 300, 127, 40, 250, 80] },\r\n    ] : [];\r\n  },\r\n\r\n});","dmx.Component('f7-pie-chart', {\r\n\r\n  attributes: {\r\n    datasets: {\r\n      type: Array,\r\n      default: undefined,\r\n    },\r\n\r\n    datasetsValue: {\r\n      type: String,\r\n      default: 'value',\r\n    },\r\n\r\n    datasetsColor: {\r\n      type: String,\r\n      default: 'color',\r\n    },\r\n\r\n    datasetsLabel: {\r\n      type: String,\r\n      default: 'label',\r\n    },\r\n\r\n    size: {\r\n      type: Number,\r\n      default: 320,\r\n    },\r\n\r\n    tooltip: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    params: {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  render (node) {\r\n    node.classList.add('pie-chart');\r\n\r\n    dmx.f7.ready(app => {\r\n      this._component = app.pieChart.create(this._getProps());\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (this._component) {\r\n      this._component.update(this._getProps());\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    if (this._component) {\r\n      this._component.destroy();\r\n      delete this._component;\r\n    }\r\n  },\r\n\r\n  _getProps () {\r\n    return {\r\n      size: this.props.size,\r\n      datasets: this._getDatasets(),\r\n      tooltip: this.props.tooltip,\r\n      ...this.props.params,\r\n      el: this.$node,\r\n    };\r\n  },\r\n\r\n  _getDatasets: function() {\r\n    return Array.isArray(this.props.datasets) ? this.props.datasets.map(data => {\r\n      const value = dmx.parse(this.props['datasets-value'], dmx.DataScope(data));\r\n      const color = dmx.parse(this.props['datasets-color'], dmx.DataScope(data));\r\n      const label = dmx.parse(this.props['datasets-label'], dmx.DataScope(data));\r\n      const dataset = { value: Number(value) };\r\n      if (color) dataset.color = String(color);\r\n      if (label) dataset.label = String(label);\r\n      return dataset;\r\n    }) : window.__WAPPLER__ ? [\r\n      { label: 'Data 1', value: 150, color: '#4dc9f6' },\r\n      { label: 'Data 2', value: 150, color: '#f67019' },\r\n      { label: 'Data 3', value: 400, color: '#f53794' },\r\n    ] : [];\r\n  },\r\n  \r\n});"]}